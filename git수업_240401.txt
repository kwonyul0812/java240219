### CLI 명령어 배우기

code . : vs code 실행

pwd 
현재 작업 디렉토리 출력

mkdir
새 디렉토리 만들기

rmdir
디렉토리 지우기
(디렉토리가 비어있을때만)

ctrl + l
화면 지우기

cd
디렉토리 변경

cd ..
상위 디렉토리로 이동

cd -
직전 작업 디렉토리로 이동

ls
현재 디렉토리의 파일목록 보기

touch
새 파일 만들기

ls -l
자세히 보기

ls -a
숨겨진파일도 보기(all)

ls -al
숨겨진 파일까지 자세히 보기

echo
출력하기

>
왼쪽 출력을 오른쪽으로 보내기

>>
왼쪽 출력을 오른쪽에 추가

cat
파일 내용 보기

git init
현재 폴더를 git이 버전관리 하는 폴더로 만듬

git add
커밋 후보로 올림 (stage, index)

git add -A :
모든 변경파일 stage

git add . :
현재 폴더내의 모든 변경 파일 stage

git restore 파일명 :
수정된 파일 원복

git restore --staged 파일명 :
스테이지에 올라간 파일 스테이지에서 내리기


git status
현재 디렉토리의 상태보기

git commit
현재 파일들의 (변경)정보(snapshot)를 저장
*같이 저장되는 정보
날짜시간
커밋한 사람
커밋메시지
부모커밋ID

git commit -m 
커밋 메시지와 함께 커밋

git commit -a
stage와 커밋 한번에

git commit -am
커밋 메시지와 stage, 커밋 한번에

git log 
커밋 히스토리 보기 
(현재 커밋 기준 과거 커밋만 보여줌)

git log --all
모든 히스토리 보기

git log --oneline
로그를 한 줄로 보기

git log --graph
그래프로 보기

git checkout
다른 커밋으로 이동

git checkout -b
브랜치 생성 후 이동

git switch
브랜치 이동

git switch -c
브랜치 생성 후 이동

git switch -
직전 브랜치로 이동

git switch 

HEAD : 현재위치

branch :
특정 커밋의 별칭
branch에서 커밋하면
최신 커밋을 가리킴

git branch
브랜치 목록 보기

git branch -r
원격 브랜치 목록

git branch -v
자세히 보기

git branch 별칭 커밋ID
특정 커밋에 별칭 붙이기

git branch 별칭 :
현재 커밋에 브랜치 생성

git branch -d 별칭 :
해당 브랜치 삭제

git branch -D 별칭 :
강제 삭제

실수로 브랜치 지웠을경우 was 5da6ca6 참고

git commit --amend -m
마지막 커밋 메시지 변경
* 최신 커밋만 변경할것, 부모 커밋을 변경할경우 자식 커밋의
아이디 등 주요 정보들이 전부 다 바뀌기 때문

git reset
git reset --mixed
이전 커밋으로 돌아가기 / 스테이지 영역까지 영향 미침,
			, 파일 수정됐으나 스테이지에 안올라간 상태

git reset --soft / 스테이지 영역은 영향 X
		스테이지에 올라간 상태로 돌린다

git reset --hard / 워킹 디렉토리 까지 영향 미침
		파일 수정까지 원복함.


HEAD~ (mixed reset과 같은 작업을 함)
HEAD~1
현재 커밋의 부모

HEAD~2
현재 커밋의 부모의 부모
현재 커밋의 2번째 전 커밋

HEAD~n
현재 커밋의 n번째 전 커밋

git diff 
스테이지와
워킹 디렉토리 비교

git rebase -i
커밋 정리하기

.gitignore
untracked 파일을
tracked로 바꾸지 않을 파일 목록


*브랜치 종류
1. 통합브랜치
2. 작업 브랜치


merge: 두개 브랜치 합치기

git merge 대상브랜치명
현재 브랜치에 대승브랜치명을 반영

fast-forward
3 way merge

merge conflict
두 브랜치가
같은 파일을 변경했을 때 발생


git remote add (별칭) (주소)
새 원격리포지토리 추가


git remote
원격리포지토리 목록 보기

git remote -v
자세히 보기

git clone
원격리포지토리 최초로 받기
git clone 주소 별칭(받을폴더)

git fetch
원격리포의 변경 사항 가져오기

git fetch --prune
git fetch -p
원격리포의 삭제된 브랜치를 로컬에 반영

git pull
원격리포의 변경 사항을 fetch하고 merge


******************************************

*github에서 브랜치 통합하기

최신 마스터 업데이트하고
최신 마스터를 로컬 작업브랜치에 통합 한 후

작업 브랜치를 원격에 push

pull request(merge request)
통합해달라는 요청을 발행(issue)

코드 리뷰(검토)

머지 풀 리퀘스트 컨펌
작업브랜치 삭제

github의 머지는 3 way merge

git fetch -p
원격의 삭제된 브랜치 로컬반영
로컬 master에 원격 master 통합
로컬 작업브랜치 삭제


*자주 사용하고 안전한 명령어
git status
현재 워킹 트리 상태보기
git fetch
원격리포 정보 가져오기
git log
커밋 히스토리 보기


*git alias
git config --global alias.별칭 명령어

user 폴더 .gitconfig 안에 alias 설정 들어있음
cd ~ -> code .gitconfig

git stash
커밋하지 않은 내용 임시보관
git stash pop : 
임시보관 내용 꺼내기

git rebase 브랜치명
작업하던 브랜치를 3 way merge 가 아닌 fast-forward merge 를 위해
브랜치 위치를 옮기는 작업


국룰 : push된 커밋은 아래 명령 금지
커밋 id 바뀌는 경우
rebase
commit --amend
reset 
----------











